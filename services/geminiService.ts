
import { GoogleGenAI, Type } from "@google/genai";

if (!process.env.API_KEY) {
  // This is a placeholder check. In a real environment, the key would be set.
  // We'll proceed with a mock function if the key is not available.
  console.warn("API_KEY environment variable not set. Using mock data for Gemini service.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY || "mock_key" });

export const fetchCampusGuide = async (universityName: string): Promise<string> => {
  if (!process.env.API_KEY || process.env.API_KEY === "mock_key") {
    // Return mock data if API key is not available
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(`
          <h2 class="text-2xl font-bold text-unistay-navy mb-3">Your Guide to ${universityName}</h2>
          <p class="mb-4">This is a mock response. In a real environment with a valid API key, this guide would be generated by Gemini, providing detailed information about the campus area, including popular spots, safety tips, and transportation options.</p>
          <h3 class="text-xl font-semibold text-unistay-navy mb-2">Key Highlights (Mock Data)</h3>
          <ul class="list-disc list-inside space-y-2">
            <li><strong>Vibrant Atmosphere:</strong> Known for its lively student community.</li>
            <li><strong>Great Food:</strong> Explore the famous food stalls near the main gate.</li>
            <li><strong>Easy Commute:</strong> Well-connected by local boda-boda and taxi services.</li>
            <li><strong>Stay Alert:</strong> Always be mindful of your surroundings, especially at night.</li>
          </ul>
        `);
      }, 1500);
    });
  }

  try {
    const prompt = `Generate a brief, friendly, and helpful student guide for the area around ${universityName} university in Kampala, Uganda. The tone should be welcoming and informative for a new student. Include three sections with headings: 1. Popular Student Hangouts (mention cafes or food spots), 2. Transportation Tips (mention common modes like boda-bodas), and 3. Safety Pointers. Format the output as simple HTML using <h2> for the main title, <h3> for section headings, and <p> or <ul>/<li> for the content. Do not include <html> or <body> tags.`;

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
    });
    
    return response.text;

  } catch (error) {
    console.error("Error fetching campus guide from Gemini:", error);
    return `
      <h2 class="text-2xl font-bold text-red-600 mb-3">Oops! Something went wrong.</h2>
      <p>We couldn't generate the campus guide at the moment. This might be due to a configuration issue or a problem with the AI service. Please try again later.</p>
      <p class="mt-2 text-sm text-gray-500">If you are the developer, check the console for more details.</p>
    `;
  }
};


export const fetchServiceGuide = async (universityName: string, serviceName: string): Promise<string> => {
   if (!process.env.API_KEY || process.env.API_KEY === "mock_key") {
    // Return mock data if API key is not available
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(`
          <h3 class="text-xl font-semibold text-unistay-navy mb-2">Finding ${serviceName} (Mock Data)</h3>
          <p class="mb-4">This is a mock guide for ${serviceName} services near ${universityName}. With a valid API key, Gemini would provide tailored recommendations, popular spots, and student-friendly tips.</p>
          <ul class="list-disc list-inside space-y-2">
            <li>Look for places with student discounts.</li>
            <li>Ask senior students for their recommendations.</li>
            <li>Check notice boards for local service providers.</li>
          </ul>
        `);
      }, 1500);
    });
  }

  try {
    const prompt = `You are a helpful student advisor. Generate a brief, friendly, and helpful guide for finding "${serviceName}" services around ${universityName} university in Kampala, Uganda. Provide practical tips, mention a few popular or affordable places (use realistic but placeholder names if you don't know any), and keep the tone encouraging for a new student. Format the output as simple HTML using <h3> for section headings, and <p> or <ul>/<li> for the content. Do not include a main <h2> title, or any <html> or <body> tags.`;

    const response = await ai.models.generateContent({
      model: "gemini-2.5-flash",
      contents: prompt,
    });
    
    return response.text;

  } catch (error) {
    console.error(`Error fetching ${serviceName} guide from Gemini:`, error);
    return `
      <h3 class="text-xl font-bold text-red-600 mb-3">Oops! Something went wrong.</h3>
      <p>We couldn't generate the guide for ${serviceName} services at the moment. Please try again later.</p>
    `;
  }
};
